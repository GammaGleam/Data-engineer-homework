Задача 6

Ссылка на задачу:
https://www.sql-ex.ru/learn_exercises.php?LN=130

Условие:
Рассматривается БД кораблей, участвовавших во второй мировой войне. Имеются следующие отношения:
Classes (class, type, country, numGuns, bore, displacement)
Ships (name, class, launched)
Battles (name, date)
Outcomes (ship, battle, result)
Корабли в «классах» построены по одному и тому же проекту, и классу присваивается либо имя первого корабля, построенного по данному проекту, либо названию класса дается имя проекта, которое не совпадает ни с одним из кораблей в БД. Корабль, давший название классу, называется головным.
Отношение Classes содержит имя класса, тип (bb для боевого (линейного) корабля или bc для боевого крейсера), страну, в которой построен корабль, число главных орудий, калибр орудий (диаметр ствола орудия в дюймах) и водоизмещение ( вес в тоннах). В отношении Ships записаны название корабля, имя его класса и год спуска на воду. В отношение Battles включены название и дата битвы, в которой участвовали корабли, а в отношении Outcomes – результат участия данного корабля в битве (потоплен-sunk, поврежден - damaged или невредим - OK).
Замечания. 1) В отношение Outcomes могут входить корабли, отсутствующие в отношении Ships. 2) Потопленный корабль в последующих битвах участия не принимает.

Историки решили составить отчет о битвах в два суперстолбца. Каждый суперстолбец состоит из трёх столбцов (номер битвы, название и дата).
Сначала в порядке возрастания номеров заполняется первый суперстолбец, потом - второй. Порядковый номер битве назначается согласно сортировке: дата, название.
С целью экономии бумаги, историки делят информацию из таблицы Battles поровну, занося в первый суперстолбец на одну битву больше при их нечетном количестве.
В таблицу с шестью колонками вывести результат работы историков, пустые места заполнить NULL-значениями.

Решение:
SELECT t1.*, t2.* FROM
(SELECT row_number() over(ORDER BY date, name) rn_1,
name as name_1 , date as date_1 FROM (SELECT *, NTILE(2) OVER(ORDER BY date, name) gr
FROM Battles) t3
WHERE t3.gr < 2 ) t1
OUTER APPLY
(SELECT t4.rn as rn_2,
name as name_2 , date as date_2 FROM (SELECT *,row_number() over(ORDER BY date, name) rn, NTILE(2) OVER(ORDER BY date, name) gr
FROM Battles) t4
WHERE t4.gr = 2 and t4.rn - t1.rn_1 = (SELECT count(*) / 2 FROM Battles)+(SELECT count(*) % 2 FROM Battles)) t2